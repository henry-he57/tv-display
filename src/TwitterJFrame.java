/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import com.teknikindustries.yahooweather.WeatherDisplay;
import com.teknikindustries.yahooweather.WeatherDoc;
import java.util.List;
import twitter4j.*;
import twitter4j.auth.AccessToken;
import java.io.IOException;
import java.net.URL;
import java.util.Arrays;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;

import twitter4j.Query;
import twitter4j.QueryResult;
import twitter4j.Status;
import twitter4j.Twitter;
import twitter4j.TwitterException;
import twitter4j.TwitterFactory;
import twitter4j.conf.ConfigurationBuilder;

/**
 *
 * @author 341167922
 */
public class TwitterJFrame extends javax.swing.JFrame {

    /**
     * Creates new form TwitterJFrame
     */
    public TwitterJFrame() {
        initComponents();
    }
    //Your Twitter App's Consumer Key
    String consumerKey = "iuQCb5R7W28H46DAMzUHM2slo";

    //Your Twitter App's Consumer Secret
    String consumerSecret = "pZxzt1uHOoKByI1Gr6ub0lUME3K4xLdxLzKvzfZsfHYesd5bJ5";

    //Your Twitter Access Token
    String accessToken = "4736054183-0r6cUOMERw9Y3lSqZAefJxFSOJ9LHWaa90WlP84";

    //Your Twitter Access Token Secret
    String accessTokenSecret = "luF2CzgnRLmpNhK5snVJn6FvsQcwMeaOuQXTO5la8KKz1";

    //Instantiate a re-usable and thread-safe factory
    TwitterFactory twitterFactory = new TwitterFactory();

    WeatherDoc doc = new WeatherDoc("4113","c"); //Your weather API location and units system
    
    WeatherDisplay disp = new WeatherDisplay(); //Create WeatherDisplay object 
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        weather1 = new weather();
        jButton2 = new javax.swing.JButton();
        twitter1 = new twitter();
        weather2 = new weather();

        javax.swing.GroupLayout weather1Layout = new javax.swing.GroupLayout(weather1);
        weather1.setLayout(weather1Layout);
        weather1Layout.setHorizontalGroup(
            weather1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        weather1Layout.setVerticalGroup(
            weather1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout twitter1Layout = new javax.swing.GroupLayout(twitter1);
        twitter1.setLayout(twitter1Layout);
        twitter1Layout.setHorizontalGroup(
            twitter1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
        );
        twitter1Layout.setVerticalGroup(
            twitter1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 125, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout weather2Layout = new javax.swing.GroupLayout(weather2);
        weather2.setLayout(weather2Layout);
        weather2Layout.setHorizontalGroup(
            weather2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        weather2Layout.setVerticalGroup(
            weather2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 375, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(weather2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(twitter1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jButton2))
                    .addComponent(weather2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(twitter1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        //Instantiate a new Twitter instance
        Twitter twitter = twitterFactory.getInstance();

        //setup OAuth Consumer Credentials
        twitter.setOAuthConsumer(consumerKey, consumerSecret);

        //setup OAuth Access Token
        twitter.setOAuthAccessToken(new AccessToken(accessToken, accessTokenSecret));

        
        String temp = disp.getTemperature();
        String tempU = disp.getTemperatureUnit();
        String condit = disp.getCondition();
        
        System.out.println(condit);
        System.out.println(temp + " " + tempU);
        
        try {
            List<Status> statuses = twitter.getHomeTimeline();
            System.out.println("Showing home timeline:");
            for (Status status : statuses) {
                System.out.println(status.getUser().getName() + ":" + status.getText());
            }

            //Instantiate and initialize a new twitter status update
            //StatusUpdate statusUpdate = new StatusUpdate("NHS Display's First Tweet!");
            //+ " - http://h1b-work-visa-usa.blogspot.com/2013/07/h-1b-transfer-jobs-java-developer_19.html");
            //attach any media, if you want to
            /*
            statusUpdate.setMedia(
            //title of media
            "http://h1b-work-visa-usa.blogspot.com", new URL("http://lh6.ggpht.com/-NiYLR6SkOmc/Uen_M8CpB7I/AAAAAAAAEQ8/tO7fufmK0Zg/h-1b%252520transfer%252520jobs%25255B4%25255D.png?imgmax=800").openStream());
            
            //tweet or update status
            Status status = twitter.updateStatus(statusUpdate);
            
            //response from twitter server
            System.out.println("status.toString() = " + status.toString());
            System.out.println("status.getInReplyToScreenName() = " + status.getInReplyToScreenName());
            System.out.println("status.getSource() = " + status.getSource());
            System.out.println("status.getText() = " + status.getText());
            System.out.println("status.getContributors() = " + Arrays.toString(status.getContributors()));
            System.out.println("status.getCreatedAt() = " + status.getCreatedAt());
            System.out.println("status.getCurrentUserRetweetId() = " + status.getCurrentUserRetweetId());
            System.out.println("status.getGeoLocation() = " + status.getGeoLocation());
            System.out.println("status.getId() = " + status.getId());
            System.out.println("status.getInReplyToStatusId() = " + status.getInReplyToStatusId());
            System.out.println("status.getInReplyToUserId() = " + status.getInReplyToUserId());
            System.out.println("status.getPlace() = " + status.getPlace());
            System.out.println("status.getRetweetCount() = " + status.getRetweetCount());
            System.out.println("status.getRetweetedStatus() = " + status.getRetweetedStatus());
            System.out.println("status.getUser() = " + status.getUser());
            System.out.println("status.getAccessLevel() = " + status.getAccessLevel());
            System.out.println("status.getHashtagEntities() = " + Arrays.toString(status.getHashtagEntities()));
            System.out.println("status.getMediaEntities() = " + Arrays.toString(status.getMediaEntities()));
            if (status.getRateLimitStatus() != null) {
            System.out.println("status.getRateLimitStatus().getLimit() = " + status.getRateLimitStatus().getLimit());
            System.out.println("status.getRateLimitStatus().getRemaining() = " + status.getRateLimitStatus().getRemaining());
            System.out.println("status.getRateLimitStatus().getResetTimeInSeconds() = " + status.getRateLimitStatus().getResetTimeInSeconds());
            System.out.println("status.getRateLimitStatus().getSecondsUntilReset() = " + status.getRateLimitStatus().getSecondsUntilReset());
            //  System.out.println("status.getRateLimitStatus().getRemainingHits() = " + status.getRateLimitStatus().getRemainingHits());
            }
            System.out.println("status.getURLEntities() = " + Arrays.toString(status.getURLEntities()));
            System.out.println("status.getUserMentionEntities() = " + Arrays.toString(status.getUserMentionEntities()));
            
            }catch(TwitterException e){
            
            }
             */
        } catch (TwitterException ex) {
            java.util.logging.Logger.getLogger(TwitterJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TwitterJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TwitterJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TwitterJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TwitterJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TwitterJFrame().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private twitter twitter1;
    private weather weather1;
    private weather weather2;
    // End of variables declaration//GEN-END:variables
}
