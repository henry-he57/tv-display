import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.logging.Level;
import javax.swing.JLabel;
import javax.swing.Timer;
import twitter4j.Status;
import twitter4j.Twitter;
import twitter4j.TwitterException;
import twitter4j.TwitterFactory;
import twitter4j.auth.AccessToken;

/**
 *
 * @author Henry
 */
public class TwitterFeed extends javax.swing.JPanel {

    //the Twitter consumer key
    String consumerKey = "iuQCb5R7W28H46DAMzUHM2slo";

    //the Twitter consumer secret
    String consumerSecret = "pZxzt1uHOoKByI1Gr6ub0lUME3K4xLdxLzKvzfZsfHYesd5bJ5";

    //the Twitter access token
    String accessToken = "4736054183-0r6cUOMERw9Y3lSqZAefJxFSOJ9LHWaa90WlP84";

    //the access token secret
    String accessTokenSecret = "luF2CzgnRLmpNhK5snVJn6FvsQcwMeaOuQXTO5la8KKz1";

    //instantiate a re-usable and thread-safe factory
    TwitterFactory twitterFactory = new TwitterFactory();

    //instantiate a new Twitter instance
    Twitter twitter = twitterFactory.getInstance();

    //stores the tweet label from the frame
    JLabel tweetLabel;

    /**
     * Creates new form twitter
     */
    public TwitterFeed() {
        initComponents();
        setKey();
    }

    /**
     * Setup Twitter authentication credentials
     */
    public void setKey() {
        //setup OAuth Consumer Credentials
        twitter.setOAuthConsumer(consumerKey, consumerSecret);

        //setup OAuth Access Token
        twitter.setOAuthAccessToken(
                new AccessToken(accessToken, accessTokenSecret));
    }

    //create a timer to refresh tweets every 10 minutes
    Timer tweetRefresh = new Timer(1000000, new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            updateTweets(tweetLabel);
        }
    });

    /**
     * Start updating the tweets every 10 minutes
     * 
     * @param tempTweets label to display tweets on
     */
    public void startTwitterTimer(JLabel tempTweets) {
        tweetRefresh.start();   //start timer to refresh twitter tweets
        updateTweets(tempTweets); //initially show tweets
        tweetLabel = tempTweets;    //store JLabel sent by Frame
    }

    /** 
     * Updates the Twitter feed on the display with new tweets
     */
    public void updateTweets(JLabel tweet) {
        try {
            List<Status> statuses = twitter.getHomeTimeline();  //list to store tweets from Twitter

            //print tweets on screen
            for (Status status : statuses) {
                tweet.setText(status.getUser().getName() + ":" + status.getText());
            }

        } catch (TwitterException ex) {
            java.util.logging.Logger.getLogger(TvDisplay.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
