
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DateFormatSymbols;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JLabel;
import javax.swing.Timer;

/**
 * @author Henry He, and Adam Morrison
 */
public class TimeAndDate extends javax.swing.JPanel {

    //define variables
    JLabel timeLabel;   //JLabel to display the time
    JLabel dateLabel;   //JLabel to display the date
    Calendar cal = new GregorianCalendar(); //calendar to get time

    //get time from calendar
    int second = cal.get(Calendar.SECOND);
    int minute = cal.get(Calendar.MINUTE);
    int hour = cal.get(Calendar.HOUR);
    int AM_PM = cal.get(Calendar.AM_PM);
    String AMPM;
    int month = cal.get(Calendar.MONTH);
    String monthString = new DateFormatSymbols().getMonths()[month];
    int year = cal.get(Calendar.YEAR);
    int date = cal.get(Calendar.DAY_OF_MONTH);

    //clock timer to update time and date
    Timer clockTimer = new Timer(10, new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            updateClock();
        }
    });

    /**
     * Creates new form TimeAndDate
     */
    public TimeAndDate() {
        initComponents();
    }

    /**
     *
     * @param tempTimeLabel JLabel to use from Frame to update time
     * @param tempDateLabel JLabel to use from Frame to update date
     */
    public void startClock(JLabel tempTimeLabel, JLabel tempDateLabel) {
        clockTimer.start(); //start the clock timer

        //pass in time and date JLabel from Frame into panel
        timeLabel = tempTimeLabel;
        dateLabel = tempDateLabel;
    }

    /**
     * Update the time and date
     */
    public void updateClock() {
        Calendar cal = new GregorianCalendar(); //calendar to get time
        //retrive time data
        second = cal.get(Calendar.SECOND);
        minute = cal.get(Calendar.MINUTE);
        hour = cal.get(Calendar.HOUR);
        AM_PM = cal.get(Calendar.AM_PM);

        //convert AM_PM int to String
        if (AM_PM == 0) {
            AMPM = "AM";
        } else {
            AMPM = "PM";
        }

        //set hour 0 of "PM" to 12 PM
        if (hour == 0 && AMPM.equals("PM")) {
            hour = 12;
        }

        //print out time while accomadating for single digits
        if (second < 10 && minute < 10) {
            timeLabel.setText(hour + ":0" + minute + ":0" + second + " " + AMPM);
        } else if (second < 10) {
            timeLabel.setText(hour + ":" + minute + ":0" + second + " " + AMPM);
        } else if (minute < 10) {
            timeLabel.setText(hour + ":0" + minute + ":" + second + " " + AMPM);
        } else {
            timeLabel.setText(hour + ":" + minute + ":" + second + " " + AMPM);
        }

        //retrieve date data
        month = cal.get(Calendar.MONTH);
        monthString = new DateFormatSymbols().getMonths()[month];
        year = cal.get(Calendar.YEAR);
        date = cal.get(Calendar.DAY_OF_MONTH);

        //print out date
        dateLabel.setText(monthString + " " + date + ", " + year);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
